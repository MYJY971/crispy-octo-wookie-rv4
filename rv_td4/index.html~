<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<title>Réalité Virtuelle - Mounsamy Yanis</title>

<link rel="stylesheet" href="//cdnjs.cloudflare.com/ajax/libs/highlight.js/8.7/styles/github-gist.min.css">
<script src="//cdnjs.cloudflare.com/ajax/libs/highlight.js/8.7/highlight.min.js"></script>
<script>hljs.initHighlightingOnLoad();</script>

<script src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.3/jquery.min.js"></script>
<script src="toc.min.js"></script>

<script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML">
    MathJax.Hub.Config({
      tex2jax: {
        inlineMath: [ ['$','$'], ["\\(","\\)"] ],
        displayMath: [ ['$$','$$'], ["\\[","\\]"] ],
        skipTags: ['script', 'noscript', 'style', 'textarea', 'pre']
      }
    });
    MathJax.Hub.Queue(function() {
        var all = MathJax.Hub.getAllJax(), i;
        for(i=0; i < all.length; i += 1) {
            all[i].SourceElement().parentNode.className += ' has-jax';
        }
    });
</script>

<link rel="stylesheet" href="style.css">

</head>

<body>

<div id="toc"></div>

<div id="content">

<h1>Réalité virtuelle et interaction - MOUNSAMY Yanis,GABOULAUD Tony</h1>

<h2>TD4 - Réalité augmentée par suivi de marqueurs</h2>

<!-- <h3>1 - Tracking avec ArUco</h3>
<h4>Tracking</h4>

<figure>
	<img src="rayon.jpg" width="400" alt="Rayon" />
	<figcaption>Tracking</figcaption>
</figure>

<figure>
	<img src="rayon.jpg" width="400" alt="Rayon" />
	<figcaption>Avec un Mesh</figcaption>
</figure>
-->
<h4>Occlusion</h4>
<p>
Pour gérer le problème d'occlusion, l'idée était de seuillé l'image afin de superposé sur la video d'origine uniquement les zones provoquant de l'occlusion.
Néanmoins ce ne fut pas une chose facile... Nous avons cherché à séparer le plateau du reste de la scène et donc délimiter les couleurs dans les tons de noir et de blanc des autres couleurs. Pour cela nous avons effectué le seuillage sur une image hsv mise en niveau de gris. En effet, pour une image en niveaux de gris, seul la composante Brighteness fait la différence, le seuillage était ainsi plus facile à réalisé. Malheureusement, cette façon de seuillé est très sensible à la luminosité de la salle et des ombres, l'efficacité de notre programme varie donc selon l'heure et le lieu d'utilisation. Pour la suite nous avons simplement créé une image dans lequel nous avons recopié les pixels qui nous interessaient et mis les autres pixels en transparent. Nous superposons ensuite cette image après les methodes dessinant l'objet virtuelle. Le soucis qui se pose, c'est que si notre objet dépasse du plateau (et que le plateau n'est pas sur un support noir ou blanc) alors les partie de l'objet dépassant du plateau ne sont pas affiché. Nous avons alors cherché à délimité la zone du plateau dans l'image seuillé (en récupérant son polygone représentative à l'aide de $ofPolyline$) et ne superposer que les zone de couleur qui apparaissaient à l'interieur du plateau. Non seulement notre programme se trouvait ralentit, mais en plus l'occlusion ne fonctionnait plus sur la zone de l'objet apparaissant à l'exterieur du plateau. Nous somme donc revenu à l'ancienne configuration. Une méthode simple et donnant de meilleur résultats, consistait à récupérer par un click, la couleur de la zone à superposé, et d'y effectuer le seuillage. Nous n'avons pas voulu faire ainsi car nous aurions aimé que l'occlusion soit géré sans intervention de l'utilisateur.

</p>
<p>
Voici le résultat obtenu :
</p>

<figure>
	<img src="occlusion.png" width="400" alt="Occlusion" />
	<figcaption>Occlusion</figcaption>
</figure>

<figure>
	<img src="rayon.jpg" width="400" alt="Rayon" />
	<figcaption>Problème rencontré</figcaption>
</figure>

<figure>
	<img src="rayon.jpg" width="400" alt="Rayon" />
	<figcaption>Occlusion restreint au plateau</figcaption>
</figure>

<figure>
	<img src="rayon.jpg" width="400" alt="Rayon" />
	<figcaption>Problème...</figcaption>
</figure>

<h3>2 - Manipulation 3D</h3>

Nous avons malheureusement pas abordé cette partie, les ordis du cremi refusant de compiler notre programme et open framework ne voulant pas fonctionner sur nos pc personnels...
</div>

<script type="text/javascript">
	$('#toc').toc({
	    'selectors': 'h2,h3,h4', //elements to use as headings
	    'container': 'body', //element to find all selectors in
	    'smoothScrolling': true, //enable or disable smooth scrolling on click
	    'prefix': 'toc', //prefix for anchor tags and class names
	    'onHighlight': function(el) {}, //called when a new section is highlighted 
	    'highlightOnScroll': true, //add class to heading that is currently in focus
	    'highlightOffset': 100, //offset to trigger the next headline
	    'anchorName': function(i, heading, prefix) { //custom function for anchor name
	        return prefix+i;
	    },
	    'headerText': function(i, heading, $heading) { //custom function building the header-item text
	        return $heading.text();
	    },
	'itemClass': function(i, heading, $heading, prefix) { // custom function for item class
	  return $heading[0].tagName.toLowerCase();
	}
	});
</script>

</body>
